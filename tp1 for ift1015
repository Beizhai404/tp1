couleur = ["#fff", "#000", "#f00", "#ff0", "#0f0", "#00f", "#f0f", "#888"]
taille = 12
longueurCadre = 1
espace = 6
nombreCouleur = 8

def carre(x, y, largeur, hauteur, i):
    fillRectangle(x, y, largeur, hauteur, couleur[i])
    
def boutonEffacer(x, y):
    fillRectangle(x, x, taille, taille, couleur[0])
    for i in range(x, y):
        setPixel(i, x, couleur[2])
        setPixel(i, y - 1, couleur[2])
        x += 1
        y -= 1
        
def cadre(x, y, largeur, hauteur):
    fillRectangle(x, y, largeur, hauteur, couleur[1])
        
def fenetre(largeur, hauteur):
    i = -1
    coordonnerDepart = espace - 1
    coordonnerFinal = coordonnerDepart + taille
    valeurA = taille + longueurCadre * 2
    valeurB = taille + nombreCouleur
    setScreenMode(largeur, hauteur)
    fillRectangle(0, 0, largeur, hauteur, couleur[0])
    fillRectangle(0, 0, largeur, 24, couleur[7])
    for x in range(coordonnerDepart, nombreCouleur * valeurB, valeurB):
        cadre(x - 1, coordonnerDepart - 1, valeurA, valeurA)
        carre(x, coordonnerDepart, taille, taille, i)
        i += 1
    boutonEffacer(coordonnerDepart, coordonnerFinal)
    
def creerBoutons(couleurs, taille, espace, couleurEffacer):
    tabFinal=[]
    #only for empty button
    coin1=struct(x=espace, y=espace)
    coin2=struct(x=espace+taille, y=espace+taille)
    couleur=couleurEffacer
    effacer=True
    tabReset=[struct(coin1,coin2,couleur,effacer)]
    
    tabFinal.extend(tabReset)
    
    --- #3.1 first draft ---
def creerBoutons(couleurs, taille, espace, couleurEffacer):
    tabFinal=[]
    coin1=struct(x=espace, y=espace) 
    coin2=struct(x=espace+taille, y=espace+taille)
    couleur=couleurEffacer
    effacer=True
    tabReset=[struct(coin1,coin2,couleur,effacer)] #only for reset button
    
    tabFinal.extend(tabReset)
    
    def tabCouleur(couleurs, taille, espace):
        
        temp=len(couleurs)             #temporary variable 1 (for the range) for the number of colors displayed
        distCoins=taille+espace        #distance between each upper left corner on x axis
        temp2=0                        #temporary variable 2 (for the elements of the table couleurs)
        couleur=couleurs.pop(0+temp2)  #to pass every color
        
        for _ in range(1,temp+1): #starting at one cauz first color table (excluding reset button)
            xPos=distCoins*_           
            coin1=struct(x=xPos+espace, y=espace)   #only way found that gets the upper left corner
            coin2=struct(x=xPos+distCoins,y=espace+taille) #since its always upper left corner position + espace+taille
            couleur=couleur 
            effacer=False #since there's only one reset button, always false for the colors
            temp2+=1      #so we pass to the next color. should stop when the table is empty?
            tabCouleur=[struct(coin1,coin2,couleur,effacer)] #gives us the color tab
            tabFinal.extend(tabCouleur)  #we add this color to the final tab, that contains the reset button and each color.
                   
    return tabFinal
    
    -----
